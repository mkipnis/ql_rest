# Autogenerated from the following stub : gensrc/stubs/stub.qlrest.python_module

# payoffs_py
# payoffs_py


import json
from json import JSONEncoder

class qlDoubleStickyRatchetPayoff(JSONEncoder):

    def __init__(self):
        self.instanceID = ""
        
        self.ObjectId = "";
        self.Type1 = 0.0;
        self.Type2 = 0.0;
        self.Gearing1 = 0.0;
        self.Gearing2 = 0.0;
        self.Gearing3 = 0.0;
        self.Spread1 = 0.0;
        self.Spread2 = 0.0;
        self.Spread3 = 0.0;
        self.InitialValue1 = 0.0;
        self.InitialValue2 = 0.0;
        self.AccrualFactor = 0.0;
        self.Permanent = False;
        self.Trigger = False;
        self.Overwrite = False;

    def default(self, o):
        return o.__dict__

import json
from json import JSONEncoder

class qlRatchetMaxPayoff(JSONEncoder):

    def __init__(self):
        self.instanceID = ""
        
        self.ObjectId = "";
        self.Gearing1 = 0.0;
        self.Gearing2 = 0.0;
        self.Gearing3 = 0.0;
        self.Spread1 = 0.0;
        self.Spread2 = 0.0;
        self.Spread3 = 0.0;
        self.InitialValue1 = 0.0;
        self.InitialValue2 = 0.0;
        self.AccrualFactor = 0.0;
        self.Permanent = False;
        self.Trigger = False;
        self.Overwrite = False;

    def default(self, o):
        return o.__dict__

import json
from json import JSONEncoder

class qlRatchetMinPayoff(JSONEncoder):

    def __init__(self):
        self.instanceID = ""
        
        self.ObjectId = "";
        self.Gearing1 = 0.0;
        self.Gearing2 = 0.0;
        self.Gearing3 = 0.0;
        self.Spread1 = 0.0;
        self.Spread2 = 0.0;
        self.Spread3 = 0.0;
        self.InitialValue1 = 0.0;
        self.InitialValue2 = 0.0;
        self.AccrualFactor = 0.0;
        self.Permanent = False;
        self.Trigger = False;
        self.Overwrite = False;

    def default(self, o):
        return o.__dict__

import json
from json import JSONEncoder

class qlRatchetPayoff(JSONEncoder):

    def __init__(self):
        self.instanceID = ""
        
        self.ObjectId = "";
        self.Gearing1 = 0.0;
        self.Gearing2 = 0.0;
        self.Spread1 = 0.0;
        self.Spread2 = 0.0;
        self.InitialValue = 0.0;
        self.AccrualFactor = 0.0;
        self.Permanent = False;
        self.Trigger = False;
        self.Overwrite = False;

    def default(self, o):
        return o.__dict__

import json
from json import JSONEncoder

class qlStickyMaxPayoff(JSONEncoder):

    def __init__(self):
        self.instanceID = ""
        
        self.ObjectId = "";
        self.Gearing1 = 0.0;
        self.Gearing2 = 0.0;
        self.Gearing3 = 0.0;
        self.Spread1 = 0.0;
        self.Spread2 = 0.0;
        self.Spread3 = 0.0;
        self.InitialValue1 = 0.0;
        self.InitialValue2 = 0.0;
        self.AccrualFactor = 0.0;
        self.Permanent = False;
        self.Trigger = False;
        self.Overwrite = False;

    def default(self, o):
        return o.__dict__

import json
from json import JSONEncoder

class qlStickyMinPayoff(JSONEncoder):

    def __init__(self):
        self.instanceID = ""
        
        self.ObjectId = "";
        self.Gearing1 = 0.0;
        self.Gearing2 = 0.0;
        self.Gearing3 = 0.0;
        self.Spread1 = 0.0;
        self.Spread2 = 0.0;
        self.Spread3 = 0.0;
        self.InitialValue1 = 0.0;
        self.InitialValue2 = 0.0;
        self.AccrualFactor = 0.0;
        self.Permanent = False;
        self.Trigger = False;
        self.Overwrite = False;

    def default(self, o):
        return o.__dict__

import json
from json import JSONEncoder

class qlStickyPayoff(JSONEncoder):

    def __init__(self):
        self.instanceID = ""
        
        self.ObjectId = "";
        self.Gearing1 = 0.0;
        self.Gearing2 = 0.0;
        self.Spread1 = 0.0;
        self.Spread2 = 0.0;
        self.InitialValue = 0.0;
        self.AccrualFactor = 0.0;
        self.Permanent = False;
        self.Trigger = False;
        self.Overwrite = False;

    def default(self, o):
        return o.__dict__

import json
from json import JSONEncoder

class qlStrikedTypePayoff(JSONEncoder):

    def __init__(self):
        self.instanceID = ""
        
        self.ObjectId = "";
        self.PayoffID = "";
        self.OptionType = "";
        self.Strike = 0.0;
        self.ThirdParameter = 0.0;
        self.Permanent = False;
        self.Trigger = False;
        self.Overwrite = False;

    def default(self, o):
        return o.__dict__
