# Autogenerated from the following stub : git/ql_rest/gensrc/stubs/stub.qlrest.python_module

# interpolation_py
# interpolation_py


import json
from json import JSONEncoder

class qlAbcdInterpolation(JSONEncoder):

    def __init__(self):
        
        self.ObjectId = "";
        self.XArray = [];
        self.YArray = [];
        self.A = 0.0;
        self.B = 0.0;
        self.C = 0.0;
        self.D = 0.0;
        self.AIsFixed = False;
        self.BIsFixed = False;
        self.CIsFixed = False;
        self.DIsFixed = False;
        self.VegaWeighted = False;
        self.EndCriteria = "";
        self.OptimizationMeth = "";
        self.Permanent = False;
        self.Trigger = False;
        self.Overwrite = False;

    def default(self, o):
        return o.__dict__

import json
from json import JSONEncoder

class qlCubicInterpolation(JSONEncoder):

    def __init__(self):
        
        self.ObjectId = "";
        self.XArray = [];
        self.YArray = [];
        self.DerApprox = "";
        self.Monotonic = False;
        self.LeftConditionType = "";
        self.LeftConditionValue = 0.0;
        self.RightConditionType = "";
        self.RightConditionValue = 0.0;
        self.Permanent = False;
        self.Trigger = False;
        self.Overwrite = False;

    def default(self, o):
        return o.__dict__

import json
from json import JSONEncoder

class qlExtrapolatorEnableExtrapolation(JSONEncoder):

    def __init__(self):
        
        self.ObjectId = "";
        self.ExtrapolationFlag = False;
        self.Trigger = False;

    def default(self, o):
        return o.__dict__

import json
from json import JSONEncoder

class qlInterpolation(JSONEncoder):

    def __init__(self):
        
        self.ObjectId = "";
        self.InterpolationType = "";
        self.XArray = [];
        self.YArray = [];
        self.Permanent = False;
        self.Trigger = False;
        self.Overwrite = False;

    def default(self, o):
        return o.__dict__

import json
from json import JSONEncoder

class qlMixedLinearCubicInterpolation(JSONEncoder):

    def __init__(self):
        
        self.ObjectId = "";
        self.XArray = [];
        self.YArray = [];
        self.SwitchIndex = 0;
        self.MixedInterpolationBehavior = "";
        self.DerApprox = "";
        self.Monotonic = False;
        self.LeftConditionType = "";
        self.LeftConditionValue = 0.0;
        self.RightConditionType = "";
        self.RightConditionValue = 0.0;
        self.Permanent = False;
        self.Trigger = False;
        self.Overwrite = False;

    def default(self, o):
        return o.__dict__

import json
from json import JSONEncoder

class qlSABRInterpolation(JSONEncoder):

    def __init__(self):
        
        self.ObjectId = "";
        self.XArray = [];
        self.YArray = [];
        self.Expiry = 0.0;
        self.Forward = 0.0;
        self.Alpha = 0.0;
        self.Beta = 0.0;
        self.Nu = 0.0;
        self.Rho = 0.0;
        self.AlphaIsFixed = False;
        self.BetaIsFixed = False;
        self.NuIsFixed = False;
        self.RhoIsFixed = False;
        self.VegaWeighted = False;
        self.EndCriteria = "";
        self.OptimizationMeth = "";
        self.Permanent = False;
        self.Trigger = False;
        self.Overwrite = False;

    def default(self, o):
        return o.__dict__
