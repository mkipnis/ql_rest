# Autogenerated from the following stub : git/ql_rest/gensrc/stubs/stub.qlrest.python_module

# options_py
# options_py


import json
from json import JSONEncoder

class qlBarrierOption(JSONEncoder):

    def __init__(self):
        
        self.ObjectId = "";
        self.BarrierType = "";
        self.Barrier = 0.0;
        self.Rebate = 0.0;
        self.Payoff = "";
        self.Exercise = "";
        self.Permanent = False;
        self.Trigger = False;
        self.Overwrite = False;

    def default(self, o):
        return o.__dict__

import json
from json import JSONEncoder

class qlCaAsianOption(JSONEncoder):

    def __init__(self):
        
        self.ObjectId = "";
        self.AverageType = "";
        self.Payoff = "";
        self.Exercise = "";
        self.Permanent = False;
        self.Trigger = False;
        self.Overwrite = False;

    def default(self, o):
        return o.__dict__

import json
from json import JSONEncoder

class qlDaAsianOption(JSONEncoder):

    def __init__(self):
        
        self.ObjectId = "";
        self.AverageType = "";
        self.RunningAccumulator = 0.0;
        self.PastFixings = 0;
        self.FixingDates = [];
        self.Payoff = "";
        self.Exercise = "";
        self.Permanent = False;
        self.Trigger = False;
        self.Overwrite = False;

    def default(self, o):
        return o.__dict__

import json
from json import JSONEncoder

class qlDividendVanillaOption(JSONEncoder):

    def __init__(self):
        
        self.ObjectId = "";
        self.Payoff = "";
        self.Exercise = "";
        self.DividendDates = [];
        self.Dividends = [];
        self.Permanent = False;
        self.Trigger = False;
        self.Overwrite = False;

    def default(self, o):
        return o.__dict__

import json
from json import JSONEncoder

class qlEuropeanOption(JSONEncoder):

    def __init__(self):
        
        self.ObjectId = "";
        self.Payoff = "";
        self.Exercise = "";
        self.Permanent = False;
        self.Trigger = False;
        self.Overwrite = False;

    def default(self, o):
        return o.__dict__

import json
from json import JSONEncoder

class qlForwardVanillaOption(JSONEncoder):

    def __init__(self):
        
        self.ObjectId = "";
        self.Moneyness = 0.0;
        self.ResetDate = "";
        self.Payoff = "";
        self.Exercise = "";
        self.Permanent = False;
        self.Trigger = False;
        self.Overwrite = False;

    def default(self, o):
        return o.__dict__

import json
from json import JSONEncoder

class qlQuantoForwardVanillaOption(JSONEncoder):

    def __init__(self):
        
        self.ObjectId = "";
        self.Moneyness = 0.0;
        self.ResetDate = "";
        self.Payoff = "";
        self.Exercise = "";
        self.Permanent = False;
        self.Trigger = False;
        self.Overwrite = False;

    def default(self, o):
        return o.__dict__

import json
from json import JSONEncoder

class qlQuantoVanillaOption(JSONEncoder):

    def __init__(self):
        
        self.ObjectId = "";
        self.Payoff = "";
        self.Exercise = "";
        self.Permanent = False;
        self.Trigger = False;
        self.Overwrite = False;

    def default(self, o):
        return o.__dict__

import json
from json import JSONEncoder

class qlVanillaOption(JSONEncoder):

    def __init__(self):
        
        self.ObjectId = "";
        self.Payoff = "";
        self.Exercise = "";
        self.Permanent = False;
        self.Trigger = False;
        self.Overwrite = False;

    def default(self, o):
        return o.__dict__
