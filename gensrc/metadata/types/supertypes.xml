
<root>

  <SuperTypes>

    <!-- C++ datatypes and other datatypes directly recognized by the compiler -->
    <SuperType name='native' objectReference='false'/>

    <!-- values which can be used synonymously with native C++ datatypes -->
    <SuperType name='implicitConversion' nativeType='double' objectReference='false'/>

    <!-- values stored in the form QuantLib::xxx -->
    <SuperType name='libraryType' conversionSuffix='Lib' objectReference='false'/>

    <!-- strings identifying enumerated types or classes -->
    <SuperType name='enumeration' nativeType='string' conversionSuffix='Enum' memberAccess='.'/>

    <!-- downcasting and/or extraction of objects -->

    <!-- to shared_ptr<QuantLibAddin::xx> -->
    <SuperType name='objectClass' nativeType='string' conversionSuffix='ObjPtr'/>

    <!-- to shared_ptr<QuantLibAddin::T> including from Handle<Quote> -->
    <SuperType name='objectQuote' nativeType='string' conversionSuffix='ObjPtr'/>

    <!-- to shared_ptr<QuantLibAddin::T> including from Handle<SwaptionVolatilityStructure> -->
    <SuperType name='objectTermStructure' nativeType='string' conversionSuffix='ObjPtr'/>

    <!-- to shared_ptr<QuantLib::xx> -->
    <SuperType name='libraryClass' nativeType='string' conversionSuffix='LibObjPtr'/>

    <!-- to shared_ptr<QuantLib::T> including generic coercion from Handle<T> to T -->
    <SuperType name='handleToLib' nativeType='string' conversionSuffix='LibObjPtr'/>

    <!-- to shared_ptr<QuantLib::T> including from Handle<Quote> -->
    <SuperType name='libraryQuote' nativeType='string' conversionSuffix='LibObjPtr'/>

    <!-- to shared_ptr<QuantLib::T> including from Handle<YieldTermStructure> / Handle<SwaptionVolatilityStructure> -->
    <SuperType name='libraryTermStructure' nativeType='string' conversionSuffix='LibObjPtr'/>

    <!-- from ObjectHandler::Object to const QuantLib::xx & -->
    <SuperType name='underlyingClass' nativeType='string' conversionSuffix='LibObj' memberAccess='.'/>

    <!-- creation of objects (Handle) wrappers-->

    <!-- upgrade shared_ptr<QuantLib::xx> to QuantLib::Handle<QuantLib::xx> -->
    <SuperType name='libToHandle' nativeType='string' conversionSuffix='LibObj'/>

    <!-- force a relationship between RelinkableHandle and its precedents-->
    <SuperType name='handlePredecessor' nativeType='string' objectReference='false' conversionSuffix=''/>

  </SuperTypes>

</root>

