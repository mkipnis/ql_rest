<Category name='capletvolstructure'>
  <description>functions to construct and use OptionletVolatilityStructure objects.</description>
  <displayName>Caplet Volatility Term Structures</displayName>
  <xlFunctionWizardCategory>QuantLib - Financial</xlFunctionWizardCategory>
  <serializationIncludes>
    <include>qlo/capletvolstructure.hpp</include>
    <include>qlo/indexes/iborindex.hpp</include>
    <include>qlo/quote.hpp</include>
    <include>qlo/termstructures.hpp</include>
    <include>ql/termstructures/volatility/optionlet/optionletvolatilitystructure.hpp</include>
    <include>ql/termstructures/volatility/optionlet/constantoptionletvol.hpp</include>
    <include>ql/termstructures/volatility/optionlet/optionletstripper1.hpp</include>
    <include>ql/termstructures/volatility/optionlet/optionletstripper2.hpp</include>
    <include>ql/termstructures/volatility/capfloor/capfloortermvolcurve.hpp</include>
    <include>ql/termstructures/volatility/capfloor/capfloortermvolsurface.hpp</include>
    <include>ql/indexes/iborindex.hpp</include>
  </serializationIncludes>
  <addinIncludes>
    <include>qlo/indexes/iborindex.hpp</include>
    <include>qlo/capletvolstructure.hpp</include>
    <include>qlo/quote.hpp</include>
    <include>qlo/termstructures.hpp</include>
    <include>qlo/handleimpl.hpp</include>
    <include>ql/termstructures/volatility/optionlet/optionletvolatilitystructure.hpp</include>
    <include>ql/termstructures/volatility/optionlet/constantoptionletvol.hpp</include>
    <include>ql/termstructures/volatility/optionlet/optionletstripper1.hpp</include>
    <include>ql/termstructures/volatility/optionlet/optionletstripper2.hpp</include>
    <include>ql/termstructures/volatility/capfloor/capfloortermvolcurve.hpp</include>
    <include>ql/termstructures/volatility/capfloor/capfloortermvolsurface.hpp</include>
    <include>ql/indexes/iborindex.hpp</include>
  </addinIncludes>
  <copyright>
    Copyright (C) 2006, 2007, 2008 Ferdinando Ametrano
    Copyright (C) 2016 Stefano Fondi
  </copyright>
  <Functions>

    <!-- OptionletVolatilityStructure interface-->
    <Member name='qlOptionletVTSVolatility' type='QuantLib::OptionletVolatilityStructure' superType='handleToLib' loopParameter='Strike'>
      <description>Returns volatility from the given OptionletVolatilityStructure object.</description>
      <libraryFunction>volatility</libraryFunction>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='OptionDate' exampleValue ='5y'>
            <type>QuantLib::Date</type>
            <tensorRank>scalar</tensorRank>
            <description>caplet/floorlet expiry date.</description>
          </Parameter>
          <Parameter name='Strike' exampleValue ='0.04' const='False'>
            <type>QuantLib::Rate</type>
            <tensorRank>vector</tensorRank>
            <description>caplet/floorlet strike.</description>
          </Parameter>
          <Parameter name='AllowExtrapolation' const='False' default='false'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>Extrapolation Flag (TRUE allows extrapolation).</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Volatility</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlOptionletVTSVolatility2' type='QuantLib::OptionletVolatilityStructure' superType='handleToLib' loopParameter='Strike'>
      <description>Returns volatility from the given OptionletVolatilityStructure object.</description>
      <libraryFunction>volatility</libraryFunction>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='OptionTenor' exampleValue ='5y'>
            <type>QuantLib::Period</type>
            <tensorRank>scalar</tensorRank>
            <description>caplet/floorlet option tenor.</description>
          </Parameter>
          <Parameter name='Strike' exampleValue ='0.04' const='False'>
            <type>QuantLib::Rate</type>
            <tensorRank>vector</tensorRank>
            <description>caplet/floorlet strike.</description>
          </Parameter>
          <Parameter name='AllowExtrapolation' const='False' default='false'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>Extrapolation Flag (TRUE allows extrapolation).</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Volatility</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlOptionletVTSBlackVariance' type='QuantLib::OptionletVolatilityStructure' superType='handleToLib' loopParameter='OptionDate'>
      <description>Returns the black variance corresponding to a given strike for a given exercise date.</description>
      <libraryFunction>blackVariance</libraryFunction>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='OptionDate' exampleValue ='5y'>
            <type>QuantLib::Date</type>
            <tensorRank>vector</tensorRank>
            <description>cap/floor expiry date.</description>
          </Parameter>
          <Parameter name='Strike' exampleValue ='0.04' const='False'>
            <type>QuantLib::Rate</type>
            <tensorRank>scalar</tensorRank>
            <description>cap/floor strike vector.</description>
          </Parameter>
          <Parameter name='AllowExtrapolation' const='False'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>Extrapolation Flag (TRUE allows extrapolation).</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Real</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlOptionletVTSBlackVariance2' type='QuantLib::OptionletVolatilityStructure' superType='handleToLib' loopParameter='OptionTenor'>
      <description>Returns the black variance corresponding to a given strike for a given exercise date.</description>
      <libraryFunction>blackVariance</libraryFunction>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='OptionTenor' exampleValue ='5y'>
            <type>QuantLib::Period</type>
            <tensorRank>vector</tensorRank>
            <description>cap/floor expiry date.</description>
          </Parameter>
          <Parameter name='Strike' exampleValue ='0.04' const='False'>
            <type>QuantLib::Rate</type>
            <tensorRank>scalar</tensorRank>
            <description>cap/floor strike vector.</description>
          </Parameter>
          <Parameter name='AllowExtrapolation' const='False'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>Extrapolation Flag (TRUE allows extrapolation).</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Real</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <!-- RelinkableHandle<OptionletVolatilityStructure> -->
    <Constructor name='qlRelinkableHandleOptionletVolatilityStructure'>
      <libraryFunction>RelinkableHandleImpl&lt;QuantLibAddin::OptionletVolatilityStructure, QuantLib::OptionletVolatilityStructure&gt;</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
        <SupportedPlatform name='Calc'/>
        <SupportedPlatform name='Cpp'/>
      </SupportedPlatforms>
      <processorName>RelinkableHandleProcessor</processorName>
      <ParameterList>
        <Parameters>
          <Parameter name='CurrentLink' default='""'>
            <type>string</type>
            <superType>handlePredecessor</superType>
            <tensorRank>scalar</tensorRank>
            <description>OptionletVolatilityStructure object ID. If omitted, nothing is linked by the RelinkableHandle.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <!-- OptionletVolatilityStructure constructors -->
    <Constructor name='qlConstantOptionletVolatility'>
      <libraryFunction>ConstantOptionletVolatility</libraryFunction>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <SupportedPlatform name='Cpp'/>
        <SupportedPlatform name='Calc'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='NDays' default='0'>
            <type>QuantLib::Size</type>
            <tensorRank>scalar</tensorRank>
            <description>number of days to advance from EvaluationDate: it fixes the date at which the variance = 0.0.</description>
          </Parameter>
          <Parameter name='Calendar' exampleValue='TARGET'>
            <type>QuantLib::Calendar</type>
            <tensorRank>scalar</tensorRank>
            <description>holiday calendar (e.g. TARGET) used for calculating the exercise dates from the expiries.</description>
          </Parameter>
          <Parameter name='BusinessDayConvention' exampleValue='"Following"'>
            <type>QuantLib::BusinessDayConvention</type>
            <tensorRank>scalar</tensorRank>
            <description>Business day convention used for calculating the exercise dates from the expiries.</description>
          </Parameter>
          <Parameter name='Volatility' examplevalue='0.20'>
            <type>QuantLib::Quote</type>
            <superType>libToHandle</superType>
            <tensorRank>scalar</tensorRank>
            <description>cap/floor constant volatility Quote.</description>
          </Parameter>
          <Parameter name='DayCounter' default='"Actual/365 (Fixed)"'>
            <type>QuantLib::DayCounter</type>
            <tensorRank>scalar</tensorRank>
            <description>DayCounter ID.</description>
          </Parameter>
          <Parameter name='VolatilityType' default ='"ShiftedLognormal"'>
            <type>QuantLib::VolatilityType</type>
            <tensorRank>scalar</tensorRank>
            <description>Volatility type: Normal or ShiftedLognormal.</description>
          </Parameter>
          <Parameter name='Displacement' default ='0.00'>
            <type>QuantLib::Real</type>
            <tensorRank>scalar</tensorRank>
            <description>Shift for the lognormal model.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlSpreadedOptionletVolatility'>
      <libraryFunction>SpreadedOptionletVolatility</libraryFunction>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <SupportedPlatform name='Cpp'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='BaseVolStructure'>
            <type>QuantLib::OptionletVolatilityStructure</type>
            <superType>libToHandle</superType>
            <tensorRank>scalar</tensorRank>
            <description>Base OptionletVolatilityStructure object ID.</description>
          </Parameter>
          <Parameter name='Spread' exampleValue='0.01'>
            <type>QuantLib::Quote</type>
            <superType>libToHandle</superType>
            <tensorRank>scalar</tensorRank>
            <description>spread.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlStrippedOptionletAdapter'>
      <libraryFunction>StrippedOptionletAdapter</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
        <SupportedPlatform name='Cpp'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='StrippedOptionletBase' >
            <type>QuantLib::StrippedOptionletBase</type>
            <superType>libraryClass</superType>
            <tensorRank>scalar</tensorRank>
            <description>Stripped Optionlet object id.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <!-- StrippedOptionlet interface and constructor -->

    <Constructor name='qlStrippedOptionlet'>
      <libraryFunction>StrippedOptionlet</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
        <SupportedPlatform name='Cpp'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='SettlementDays' default='0'>
            <type>QuantLib::Size</type>
            <tensorRank>scalar</tensorRank>
            <description>number of settlement days.</description>
          </Parameter>
          <Parameter name='Calendar' exampleValue='TARGET'>
            <type>QuantLib::Calendar</type>
            <tensorRank>scalar</tensorRank>
            <description>holiday calendar (e.g. TARGET) used for calculating the exercise dates from the expiries.</description>
          </Parameter>
          <Parameter name='BusinessDayConvention' exampleValue='"Following"'>
            <type>QuantLib::BusinessDayConvention</type>
            <tensorRank>scalar</tensorRank>
            <description>Business day convention used for calculating the exercise dates from the expiries.</description>
          </Parameter>
          <Parameter name='IborIndex' exampleValue ='Euribor6M'>
            <type>QuantLib::IborIndex</type>
            <tensorRank>scalar</tensorRank>
            <description>IborIndex object ID.</description>
          </Parameter>
          <Parameter name='OptionletDates' exampleValue ='5Y, 10Y'>
            <type>QuantLib::Date</type>
            <tensorRank>vector</tensorRank>
            <description>optionlet dates.</description>
          </Parameter>
          <Parameter name='Strikes' exampleValue ='0.03, 0.04, 0.05'>
            <type>QuantLib::Rate</type>
            <tensorRank>vector</tensorRank>
            <description>strikes.</description>
          </Parameter>
          <Parameter name='Volatilities'>
            <type>QuantLib::Quote</type>
            <superType>libToHandle</superType>
            <tensorRank>matrix</tensorRank>
            <description>vol quotes.</description>
          </Parameter>
          <Parameter name='DayCounter' default='"Actual/365 (Fixed)"'>
            <type>QuantLib::DayCounter</type>
            <tensorRank>scalar</tensorRank>
            <description>DayCounter ID.</description>
          </Parameter>
          <Parameter name='VolatilityType' default ='"ShiftedLognormal"'>
            <type>QuantLib::VolatilityType</type>
            <tensorRank>scalar</tensorRank>
            <description>Volatility type: Normal or ShiftedLognormal.</description>
          </Parameter>
          <Parameter name='Displacement' default ='0.00'>
            <type>QuantLib::Real</type>
            <tensorRank>scalar</tensorRank>
            <description>Shift for the lognormal model.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <!-- StrippedOptionletBase interface -->

    <Member name='qlStrippedOptionletBaseStrikes' type='QuantLib::StrippedOptionletBase' superType='libraryClass'>
      <description>Returns optionlet strike from the given StrippedOptionletBase object.</description>
      <libraryFunction>optionletStrikes</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='Index' exampleValue='0'>
            <type>QuantLib::Size</type>
            <tensorRank>scalar</tensorRank>
            <description>optionlet index.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Rate</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlStrippedOptionletBaseOptionletVolatilities' type='QuantLib::StrippedOptionletBase' superType='libraryClass'>
      <description>Returns optionlet volatilities from the given StrippedOptionletBase object.</description>
      <libraryFunction>optionletVolatilities</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='Index' exampleValue='0'>
            <type>QuantLib::Size</type>
            <tensorRank>scalar</tensorRank>
            <description>optionlet index.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Volatility</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlStrippedOptionletBaseOptionletFixingDates' type='QuantLib::StrippedOptionletBase' superType='libraryClass'>
      <description>Returns optionlet fixing dates from the given StrippedOptionletBase object.</description>
      <libraryFunction>optionletFixingDates</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Date</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlStrippedOptionletBaseOptionletFixingTimes' type='QuantLib::StrippedOptionletBase' superType='libraryClass'>
      <description>Returns optionlet fixing times from the given StrippedOptionletBase object.</description>
      <libraryFunction>optionletFixingTimes</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Time</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlStrippedOptionletBaseAtmOptionletRates' type='QuantLib::StrippedOptionletBase' superType='libraryClass'>
      <description>Returns atm optionlet rates from the given StrippedOptionletBase object.</description>
      <libraryFunction>atmOptionletRates</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Rate</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlStrippedOptionletBaseDayCounter' type='QuantLib::StrippedOptionletBase' superType='libraryClass'>
      <description>Returns the DayCounter used by the given StrippedOptionletBase object.</description>
      <libraryFunction>dayCounter</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::DayCounter</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlStrippedOptionletBaseCalendar' type='QuantLib::StrippedOptionletBase' superType='libraryClass'>
      <description>Returns the calendar used by the given StrippedOptionletBase object.</description>
      <libraryFunction>calendar</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Calendar</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlStrippedOptionletBaseSettlementDays' type='QuantLib::StrippedOptionletBase' superType='libraryClass'>
      <description>Returns the number of settlement days for the given StrippedOptionletBase object.</description>
      <libraryFunction>settlementDays</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
        <SupportedPlatform name='Cpp'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Natural</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlStrippedOptionletBaseBusinessDayConvention' type='QuantLib::StrippedOptionletBase' superType='libraryClass'>
      <description>Returns the business day convention used in tenor to date conversion.</description>
      <libraryFunction>businessDayConvention</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::BusinessDayConvention</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <!-- OptionletStripper interface -->

    <Member name='qlOptionletStripperOptionletFixingTenors' type='QuantLib::OptionletStripper' superType='libraryClass'>
      <description>Returns optionlet fixing tenors from the given OptionletStripper object.</description>
      <libraryFunction>optionletFixingTenors</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Period</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlOptionletStripperOptionletPaymentDates' type='QuantLib::OptionletStripper' superType='libraryClass'>
      <description>Returns optionlet payment dates from the given OptionletStripper object.</description>
      <libraryFunction>optionletPaymentDates</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Date</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlOptionletStripperOptionletAccrualPeriods' type='QuantLib::OptionletStripper' superType='libraryClass'>
      <description>Returns optionlet accrual periods from the given OptionletStripper object.</description>
      <libraryFunction>optionletAccrualPeriods</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Time</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <!-- OptionletStripper1 interface and constructor -->

    <Member name='qlOptionletStripper1CapFloorPrices' type='QuantLib::OptionletStripper1' superType='libraryClass'>
      <description>Returns option prices matrix from the given OptionletStripper1 object.</description>
      <libraryFunction>capFloorPrices</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Matrix</type>
        <tensorRank>matrix</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlOptionletStripper1CapFloorVolatilities' type='QuantLib::OptionletStripper1' superType='libraryClass'>
      <description>Returns option volatilities matrix from the given OptionletStripper1 object.</description>
      <libraryFunction>capFloorVolatilities</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Matrix</type>
        <tensorRank>matrix</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlOptionletStripper1OptionletPrices' type='QuantLib::OptionletStripper1' superType='libraryClass'>
      <description>Returns optionlet prices matrix from the given OptionletStripper1 object.</description>
      <libraryFunction>optionletPrices</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Matrix</type>
        <tensorRank>matrix</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlOptionletStripper1SwitchStrike' type='QuantLib::OptionletStripper1' superType='libraryClass'>
      <description>Returns option switch strike from the given OptionletStripper1 object.</description>
      <libraryFunction>switchStrike</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Rate</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Constructor name='qlOptionletStripper1'>
      <libraryFunction>OptionletStripper1</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='TermVolSurface' >
            <type>QuantLib::CapFloorTermVolSurface</type>
            <superType>libraryClass</superType>
            <tensorRank>scalar</tensorRank>
            <description>CapFloorTermVolSurface object ID.</description>
          </Parameter>
          <Parameter name='IborIndex'>
            <type>QuantLib::IborIndex</type>
            <tensorRank>scalar</tensorRank>
            <description>cap index object ID.</description>
          </Parameter>
          <Parameter name='SwitchStrike' default='QuantLib::Null&lt;QuantLib::Rate&gt;()'>
            <type>QuantLib::Rate</type>
            <tensorRank>scalar</tensorRank>
            <description>switch strike.</description>
          </Parameter>
          <Parameter name='Accuracy' default='1.0e-6'>
            <type>QuantLib::Real</type>
            <tensorRank>scalar</tensorRank>
            <description>solver accuracy.</description>
          </Parameter>
          <Parameter name='MaxIter' default='100'>
            <type>QuantLib::Natural</type>
            <tensorRank>scalar</tensorRank>
            <description>solver max iterations.</description>
          </Parameter>
          <Parameter name='VolatilityType' default ='"ShiftedLognormal"'>
            <type>QuantLib::VolatilityType</type>
            <tensorRank>scalar</tensorRank>
            <description>Volatility type: Normal or ShiftedLognormal.</description>
          </Parameter>
          <Parameter name='Displacement' default ='0.00'>
            <type>QuantLib::Real</type>
            <tensorRank>scalar</tensorRank>
            <description>Shift for the lognormal model.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <!-- OptionletStripper2 interface and constructor -->

    <Member name='qlOptionletStripper2SpreadsVol' type='QuantLib::OptionletStripper2' superType='libraryClass'>
      <description>Returns optionlet spread (with respect to ATM) vols from the given OptionletStripper2 object.</description>
      <libraryFunction>spreadsVol</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Spread</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlOptionletStripper2AtmCapFloorPrices' type='QuantLib::OptionletStripper2' superType='libraryClass'>
      <description>Returns ATM option prices from the given OptionletStripper2 object.</description>
      <libraryFunction>atmCapFloorPrices</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Real</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlOptionletStripper2AtmCapFloorStrikes' type='QuantLib::OptionletStripper2' superType='libraryClass'>
      <description>Returns option ATM strikes from the given OptionletStripper2 object.</description>
      <libraryFunction>atmCapFloorStrikes</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Rate</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Constructor name='qlOptionletStripper2'>
      <libraryFunction>OptionletStripper2</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='OptionletStripper1'>
            <type>QuantLib::OptionletStripper1</type>
            <superType>libraryClass</superType>
            <tensorRank>scalar</tensorRank>
            <description>OptionletStripper1 object id.</description>
          </Parameter>
          <Parameter name='TermVolCurve'>
            <type>QuantLib::CapFloorTermVolCurve</type>
            <superType>libToHandle</superType>
            <tensorRank>scalar</tensorRank>
            <description>CapFloorTermVolCurve object id.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <!-- CapFloorTermVolStructure interface -->
    <Member name='qlCapFloorTermVTSVolatility' type='QuantLib::CapFloorTermVolatilityStructure' superType='libraryClass' loopParameter='Strike'>
      <description>Returns volatility from the given CapFloorTermVolatilityStructure object.</description>
      <libraryFunction>volatility</libraryFunction>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='OptionDate' exampleValue ='5y'>
            <type>QuantLib::Date</type>
            <tensorRank>scalar</tensorRank>
            <description>caplet/floorlet expiry date.</description>
          </Parameter>
          <Parameter name='Strike' exampleValue ='0.04' const='False'>
            <type>QuantLib::Rate</type>
            <tensorRank>vector</tensorRank>
            <description>caplet/floorlet strike.</description>
          </Parameter>
          <Parameter name='AllowExtrapolation' const='False' default='false'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>Extrapolation Flag (TRUE allows extrapolation).</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Volatility</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlCapFloorTermVTSVolatility2' type='QuantLib::CapFloorTermVolatilityStructure' superType='libraryClass' loopParameter='Strike'>
      <description>Returns volatility from the given CapFloorTermVolatilityStructure object.</description>
      <libraryFunction>volatility</libraryFunction>
      <SupportedPlatforms>
        <!--SupportedPlatform name='Excel' calcInWizard='false'/-->
        <SupportedPlatform name='Excel'/>
        <!--SupportedPlatform name='Cpp'/-->
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='OptionTenor' exampleValue ='5y'>
            <type>QuantLib::Period</type>
            <tensorRank>scalar</tensorRank>
            <description>caplet/floorlet option tenor.</description>
          </Parameter>
          <Parameter name='Strike' exampleValue ='0.04' const='False'>
            <type>QuantLib::Rate</type>
            <tensorRank>vector</tensorRank>
            <description>caplet/floorlet strike.</description>
          </Parameter>
          <Parameter name='AllowExtrapolation' const='False' default='false'>
            <type>bool</type>
            <tensorRank>scalar</tensorRank>
            <description>Extrapolation Flag (TRUE allows extrapolation).</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Volatility</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <!-- CapFloorTermVolCurve interface and constructor -->
    <Member name='qlCapFloorTermVolCurveOptionTenors' type='QuantLib::CapFloorTermVolCurve' superType='libraryClass'>
      <description>Returns the option tenors from the given CapFloorTermVolCurve object.</description>
      <libraryFunction>optionTenors</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Period</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlCapFloorTermVolCurveOptionDates' type='QuantLib::CapFloorTermVolCurve' superType='libraryClass'>
      <description>Returns the option dates from the given CapFloorTermVolCurve object.</description>
      <libraryFunction>optionDates</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Date</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Constructor name='qlCapFloorTermVolCurve'>
      <libraryFunction>CapFloorTermVolCurve</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
        <SupportedPlatform name='Cpp'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='SettlementDays' exampleValue='0'>
            <type>QuantLib::Size</type>
            <tensorRank>scalar</tensorRank>
            <description>number of settlement days.</description>
          </Parameter>
          <Parameter name='Calendar' exampleValue='TARGET'>
            <type>QuantLib::Calendar</type>
            <tensorRank>scalar</tensorRank>
            <description>holiday calendar used for calculating the exercise dates from the expiries tenor.</description>
          </Parameter>
          <Parameter name='BusinessDayConvention' exampleValue='"Following"'>
            <type>QuantLib::BusinessDayConvention</type>
            <tensorRank>scalar</tensorRank>
            <description>Business day convention used for calculating the exercise dates from the expiries.</description>
          </Parameter>
          <Parameter name='OptionTenors' exampleValue ='3Y, 5Y, 7Y, 10Y'>
            <type>QuantLib::Period</type>
            <tensorRank>vector</tensorRank>
            <description>option tenors.</description>
          </Parameter>
          <Parameter name='Volatilities' exampleValue ='0.30, 0.27, 0.25, 0.21'>
            <type>QuantLib::Quote</type>
            <superType>libToHandle</superType>
            <tensorRank>vector</tensorRank>
            <description>vol quotes vector.</description>
          </Parameter>
          <Parameter name='DayCounter' default='"Actual/365 (Fixed)"'>
            <type>QuantLib::DayCounter</type>
            <tensorRank>scalar</tensorRank>
            <description>DayCounter ID.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <!-- CapFloorTermVolSurface interface and constructor -->
    <Member name='qlCapFloorTermVolSurfaceOptionTenors' type='QuantLib::CapFloorTermVolSurface' superType='libraryClass'>
      <description>Returns the option tenors from the given CapFloorTermVolSurface object.</description>
      <libraryFunction>optionTenors</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Period</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlCapFloorTermVolSurfaceOptionDates' type='QuantLib::CapFloorTermVolSurface' superType='libraryClass'>
      <description>Returns the option dates from the given CapFloorTermVolSurface object.</description>
      <libraryFunction>optionDates</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Date</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlCapFloorTermVolSurfaceStrikes' type='QuantLib::CapFloorTermVolSurface' superType='libraryClass'>
      <description>Returns the option strikes from the given CapFloorTermVolSurface object.</description>
      <libraryFunction>strikes</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Rate</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Constructor name='qlCapFloorTermVolSurface'>
      <libraryFunction>CapFloorTermVolSurface</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel' calcInWizard='false' />
        <SupportedPlatform name='Cpp'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='SettlementDays' exampleValue='0'>
            <type>QuantLib::Size</type>
            <tensorRank>scalar</tensorRank>
            <description>number of settlement days.</description>
          </Parameter>
          <Parameter name='Calendar' exampleValue='TARGET'>
            <type>QuantLib::Calendar</type>
            <tensorRank>scalar</tensorRank>
            <description>holiday calendar used for calculating the exercise dates from the expiries tenor.</description>
          </Parameter>
          <Parameter name='BusinessDayConvention' exampleValue='"Following"'>
            <type>QuantLib::BusinessDayConvention</type>
            <tensorRank>scalar</tensorRank>
            <description>Business day convention used for calculating the exercise dates from the expiries.</description>
          </Parameter>
          <Parameter name='OptionTenors' exampleValue ='5Y, 10Y'>
            <type>QuantLib::Period</type>
            <tensorRank>vector</tensorRank>
            <description>option tenors.</description>
          </Parameter>
          <Parameter name='Strikes'>
            <type>QuantLib::Rate</type>
            <tensorRank>vector</tensorRank>
            <description>cap strikes.</description>
          </Parameter>
          <Parameter name='Volatilities'>
            <type>QuantLib::Quote</type>
            <superType>libToHandle</superType>
            <tensorRank>matrix</tensorRank>
            <description>vol quotes matrix.</description>
          </Parameter>
          <Parameter name='DayCounter' default='"Actual/365 (Fixed)"'>
            <type>QuantLib::DayCounter</type>
            <tensorRank>scalar</tensorRank>
            <description>DayCounter ID.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

  </Functions>
</Category>
