<Category name='timeseries'>
  <description>functions to construct and use TimeSeries objects.</description>
  <displayName>TimeSeries</displayName>
  <xlFunctionWizardCategory>QuantLib - Financial</xlFunctionWizardCategory>
  <serializationIncludes>
    <include>qlo/timeseries.hpp</include>
    <include>qlo/index.hpp</include>
  </serializationIncludes>
  <addinIncludes>
    <include>qlo/timeseries.hpp</include>
    <include>qlo/index.hpp</include>
  </addinIncludes>
  <copyright>
    Copyright (C) 2007, 2008 Ferdinando Ametrano
    Copyright (C) 2007 Eric Ehlers
  </copyright>
  <Functions>

    <Member name='qlTimeSeriesFirstDate' type='QuantLib::TimeSeriesDef' superType='libraryClass'>
      <description>Returns the first date for which a historical datum exists.</description>
      <libraryFunction>firstDate</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Date</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlTimeSeriesLastDate' type='QuantLib::TimeSeriesDef' superType='libraryClass'>
      <description>Returns the last date for which a historical datum exists.</description>
      <libraryFunction>lastDate</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Date</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlTimeSeriesSize' type='QuantLib::TimeSeriesDef' superType='libraryClass'>
      <description>Returns the size of the time series.</description>
      <libraryFunction>size</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Size</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlTimeSeriesEmpty' type='QuantLib::TimeSeriesDef' superType='libraryClass'>
      <description>Returns whether the series contains any data.</description>
      <libraryFunction>empty</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>bool</type>
        <tensorRank>scalar</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlTimeSeriesDates' type='QuantLib::TimeSeriesDef' superType='libraryClass'>
      <description>Returns the dates for which historical data exist.</description>
      <libraryFunction>dates</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Date</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Member name='qlTimeSeriesValues' type='QuantLib::TimeSeriesDef' superType='libraryClass'>
      <description>Returns the historical data.</description>
      <libraryFunction>values</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters/>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Real</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <!-- Need to loop on QuantLib::TimeSeries::operator[] but the autogenerated code crashes VC7 so loop
    instead on QuantLibAddin::TimeSeriesDef::subscriptWrapper().  See also QuantLibAddin/qlo/timeseries.hpp.
    <Member name='qlTimeSeriesValue' type='QuantLib::TimeSeriesDef' superType='libraryClass' loopParameter='Dates'-->
    <Member name='qlTimeSeriesValue' type='QuantLibAddin::TimeSeriesDef' superType='objectClass' loopParameter='Dates'>
      <description>Returns returns the data corresponding to the given dates.</description>
      <!--libraryFunction>operator[]</libraryFunction-->
      <libraryFunction>subscriptWrapper</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='Dates' exampleValue='02-Jan-2007'>
            <type>QuantLib::Date</type>
            <tensorRank>vector</tensorRank>
            <description>fixing date(s).</description>
          </Parameter>
        </Parameters>
      </ParameterList>
      <ReturnValue>
        <type>QuantLib::Real</type>
        <tensorRank>vector</tensorRank>
      </ReturnValue>
    </Member>

    <Constructor name='qlTimeSeries'>
      <libraryFunction>TimeSeriesDef</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
        <SupportedPlatform name='Cpp'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='Dates'>
            <type>QuantLib::Date</type>
            <tensorRank>vector</tensorRank>
            <description>dates.</description>
          </Parameter>
          <Parameter name='Values'>
            <type>QuantLib::Real</type>
            <tensorRank>vector</tensorRank>
            <description>values.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlTimeSeriesFromIndex'>
      <libraryFunction>TimeSeriesDef</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='Index'>
            <type>QuantLib::Index</type>
            <tensorRank>scalar</tensorRank>
            <description>Index object ID.</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>
  </Functions>
</Category>
